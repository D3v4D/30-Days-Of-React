{"ast":null,"code":"var _jsxFileName = \"/home/d3v4d/Projects/30-Days-Of-React/03_Day_Setting_Up/first_app/src/index.js\";\n//index.js\n// importing the react and react-dom package\n\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport asabenehImage from \"./images/asabeneh.jpg\";\n\n// Hexadecimal color generator\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst hexaColor = () => {\n  let str = '0123456789abcdef';\n  let color = '';\n  for (let i = 0; i < 6; i++) {\n    let index = Math.floor(Math.random() * str.length);\n    color += str[index];\n  }\n  return '#' + color;\n};\nconst HexaColor = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: hexaColor()\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 25\n}, this);\n_c = HexaColor;\nconst HexaArray = [];\nfor (let i = 0; i < 5; i++) {\n  HexaArray.push(hexaColor());\n}\nconst HexaStack = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 29,\n  columnNumber: 1\n}, this);\n\n// JSX element, app\n_c2 = HexaStack;\nconst App = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"App\",\n  children: [/*#__PURE__*/_jsxDEV(HexaColor, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(HexaColor, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(HexaColor, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(HexaColor, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(HexaColor, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 35,\n  columnNumber: 3\n}, this);\n\n// we render the App component using the ReactDOM package\n_c3 = App;\nconst rootElement = document.getElementById('root');\nconst root = ReactDOM.createRoot(rootElement);\nroot.render(/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 48,\n  columnNumber: 13\n}, this));\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"HexaColor\");\n$RefreshReg$(_c2, \"HexaStack\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","ReactDOM","asabenehImage","jsxDEV","_jsxDEV","hexaColor","str","color","i","index","Math","floor","random","length","HexaColor","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","HexaArray","push","HexaStack","_c2","App","className","_c3","rootElement","document","getElementById","root","createRoot","render","$RefreshReg$"],"sources":["/home/d3v4d/Projects/30-Days-Of-React/03_Day_Setting_Up/first_app/src/index.js"],"sourcesContent":["//index.js\n// importing the react and react-dom package\n\nimport React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport asabenehImage from \"./images/asabeneh.jpg\"\n\n\n// Hexadecimal color generator\nconst hexaColor = () => {\n  let str = '0123456789abcdef'\n  let color = ''\n  for (let i = 0; i < 6; i++) {\n    let index = Math.floor(Math.random() * str.length)\n    color += str[index]\n  }\n  return '#' + color\n}\n\nconst HexaColor = () => <div>{hexaColor()}</div>\n\nconst HexaArray = []\n\nfor(let i = 0; i < 5; i++){\n  HexaArray.push(hexaColor())\n}\n\nconst HexaStack = () => \n<div>\n  <div></div>\n</div>\n\n// JSX element, app\nconst App = () => (\n  <div className='App'>\n    <HexaColor />\n    <HexaColor />\n    <HexaColor />\n    <HexaColor />\n    <HexaColor />\n\n  </div>\n)\n\n// we render the App component using the ReactDOM package\nconst rootElement = document.getElementById('root')\nconst root = ReactDOM.createRoot(rootElement)\nroot.render(<App/>)"],"mappings":";AAAA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,aAAa,MAAM,uBAAuB;;AAGjD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB,IAAIC,GAAG,GAAG,kBAAkB;EAC5B,IAAIC,KAAK,GAAG,EAAE;EACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC1B,IAAIC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGN,GAAG,CAACO,MAAM,CAAC;IAClDN,KAAK,IAAID,GAAG,CAACG,KAAK,CAAC;EACrB;EACA,OAAO,GAAG,GAAGF,KAAK;AACpB,CAAC;AAED,MAAMO,SAAS,GAAGA,CAAA,kBAAMV,OAAA;EAAAW,QAAA,EAAMV,SAAS,CAAC;AAAC;EAAAW,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAM,CAAC;AAAAC,EAAA,GAA1CN,SAAS;AAEf,MAAMO,SAAS,GAAG,EAAE;AAEpB,KAAI,IAAIb,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAC;EACxBa,SAAS,CAACC,IAAI,CAACjB,SAAS,CAAC,CAAC,CAAC;AAC7B;AAEA,MAAMkB,SAAS,GAAGA,CAAA,kBAClBnB,OAAA;EAAAW,QAAA,eACEX,OAAA;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACR,CAAC;;AAEN;AAAAK,GAAA,GALMD,SAAS;AAMf,MAAME,GAAG,GAAGA,CAAA,kBACVrB,OAAA;EAAKsB,SAAS,EAAC,KAAK;EAAAX,QAAA,gBAClBX,OAAA,CAACU,SAAS;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eACbf,OAAA,CAACU,SAAS;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eACbf,OAAA,CAACU,SAAS;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eACbf,OAAA,CAACU,SAAS;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eACbf,OAAA,CAACU,SAAS;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAEV,CACN;;AAED;AAAAQ,GAAA,GAXMF,GAAG;AAYT,MAAMG,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;AACnD,MAAMC,IAAI,GAAG9B,QAAQ,CAAC+B,UAAU,CAACJ,WAAW,CAAC;AAC7CG,IAAI,CAACE,MAAM,cAAC7B,OAAA,CAACqB,GAAG;EAAAT,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAC,CAAC,CAAC;AAAA,IAAAC,EAAA,EAAAI,GAAA,EAAAG,GAAA;AAAAO,YAAA,CAAAd,EAAA;AAAAc,YAAA,CAAAV,GAAA;AAAAU,YAAA,CAAAP,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}